openapi: 3.1.0
info:
  title: Novita
  version: 0.1.0
servers:
  - url: https://api.novita.ai
    description: Novita base URL.
paths:
  /v2/progress:
    get:
      operationId: getProgress
      parameters:
      - name: task_id
        required: true
        in: query
        description: "task_id from /v2/img2img"
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressResponse'
  /v2/img2img:
    post:
      operationId: getImg2Img
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Img2ImgRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Img2ImgResponse'
  /v3/merge-face:
    post:
      operationId: mergeFace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeFaceRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeFaceResponse'
components:
  schemas:
    MergeFaceResponse:
      type: object
      required:
        - image_file
        - image_type
      properties:
        image_file:
          type: string
        image_type:
          type: string
    MergeFaceRequest:
      type: object
      required:
        - face_image_file
        - image_file
      properties:
        face_image_file:
          type: string
        image_file:
          type: string
    ProgressResponse:
      type: object
      required:
        - code
        - msg
        - data
      properties:
        code:
          type: integer
          description: >
            Response code indicating the status of the operation.
            - CodeNormal=0
            - CodeInternalError=-1
            - CodeInvalidJSON=1
            - CodeModelNotExist=2
            - CodeTaskIdNotExist=3
            - CodeInvalidAuth=4
            - CodeHostUnavailable=5
            - CodeParamRangeOutOfLimit=6
            - CodeCostBalanceFailure=7
            - CodeSamplerNotExist=8
            - CodeTimeout=9
            - CodeNotSupport=10
        msg:
          type: string
          description: Response message.
        data:
          type: object
          required:
            - status
            - progress
            - eta_relative
            - imgs
          properties:
            status:
              type: integer
              description: >
                Generation status:
                - 0 = Initializing
                - 1 = In progress
                - 2 = Successful
                - 3 = Failed
                - 4 = Timeout
            progress:
              type: number
              description: Progress of generating the image, ranging from [0, 1].
            eta_relative:
              type: number
              description: Estimated time remaining in seconds.
            imgs:
              type: array
              items:
                type: string
              nullable: true
              description: S3 address of the generated image.
            failed_reason:
              type: string
              description: Reason for the failure if status is 3 or 4.
            current_images:
              type: array
              items:
                type: string
              description: Preview images during the image generation process.
            submit_time:
              type: string
              description: Task submitted time.
            execution_time:
              type: string
              description: Starting task execution time.
            txt2img_time:
              type: string
              description: Image generated by Stable Diffusion time.
            finish_time:
              type: string
              description: Image uploaded to Storage time.
            info:
              type: string
              description: The info information of Stable Diffusion returned as a JSON string.
    Img2ImgRequest:
      type: object
      required:
        - prompt
        - sampler_name
        - batch_size
        - n_iter
        - steps
        - cfg_scale
        - height
        - width
        - model_name
        - init_images
      properties:
        prompt:
          type: string
          nullable: true
          description: Text string submitted to create an image.
        negative_prompt:
          type: string
          description: Specifies what should not be included in the image.
        sampler_name:
          type: string
          enum:
            - Euler a
            - Euler
            - LMS
            - Heun
            - DPM2
            - DPM2 a
            - DPM++ 2S a
            - DPM++ 2M
            - DPM++ SDE
            - DPM fast
            - DPM adaptive
            - LMS Karras
            - DPM2 Karras
            - DPM2 a Karras
            - DPM++ 2S a Karras
            - DPM++ 2M Karras
            - DPM++ SDE Karras
            - DDIM
            - PLMS
            - UniPC
          description: Denoising process used in image generation.
        batch_size:
          type: integer
          description: Number of images generated in one single generation.
        n_iter:
          type: integer
          description: Number of generations.
        steps:
          type: integer
          description: Iterations of the image creation process.
        cfg_scale:
          type: number
          description: Controls how closely Stable Diffusion follows the prompt.
        seed:
          type: integer
          description: Seed number for generating noise.
        height:
          type: integer
          description: Height of the image.
        width:
          type: integer
          description: Width of the image.
        model_name:
          type: string
          description: Model used for generating images.
        init_images:
          type: array
          items:
            type: string
          description: Base64 encoded initial images.
        denoising_strength:
          type: number
          description: Controls the amount of noise added.
        restore_faces:
          type: boolean
          description: Enables the Stable Diffusion restore faces plugin.
        sd_vae:
          type: string
          description: Variational Auto Encoder used.
        clip_skip:
          type: integer
          description: Skip steps in the clipping process.
        mask:
          type: string
          description: Base64 encoded mask for inpainting.
        resize_mode:
          type: integer
          description: Mode used for resizing images.
        image_cfg_scale:
          type: integer
          description: Configuration scale for the image.
        mask_blur:
          type: integer
          description: Blur level for the mask.
        inpainting_fill:
          type: integer
          description: Fill level for inpainting.
        inpaint_full_res:
          type: integer
          description: Resolution for inpainted area.
        inpaint_full_res_padding:
          type: integer
          description: Padding for inpainted area, in pixels.
        inpainting_mask_invert:
          type: integer
          description: Mask inversion mode.
        initial_noise_multiplier:
          type: number
          description: Noise multiplier for img2img settings.
        img_expire_ttl:
          type: integer
          description: Image storage time in seconds.
        sd_refiner:
          type: array
          items:
            $ref: '#/components/schemas/SDRefiner'
        controlnet_units:
          type: array
          items:
            $ref: '#/components/schemas/ControlNetUnit'
    SDRefiner:
      type: object
      required:
        - checkpoint
        - switch_at
      properties:
        checkpoint:
          type: string
          description: Refiner checkpoint name.
        switch_at:
          type: number
          description: Weight of refiner, from 0 to 1.
    ControlNetUnit:
      type: object
      required:
        - model
        - weight
        - input_image
        - module
        - control_mode
      properties:
        model:
          type: string
          description: Model used for conditioning.
        weight:
          type: string
          description: Weight of this unit, defaults to 1.
        input_image:
          type: string
          description: Base64 of input image.
        module:
          type: string
          description: Preprocessor used on the image.
        control_mode:
          type: integer
          description: Control mode for balancing prompt and ControlNet importance.
    Img2ImgResponse:
      type: object
      required:
        - code
        - msg
        - data
      properties:
        code:
          type: integer
        msg:
          type: string
          description: Descriptive message corresponding to the response code.
        data:
          type: object
          required:
            - task_id
          properties:
            task_id:
              type: string
              description: Task ID, used by /v2/progress to track the task.
            warn:
              type: string
              description: Warning messages for potential risks.

